## ConverterSection Component

The `ConverterSection` component is a React component that represents a section of a smart IPG payment gateway. It includes a currency converter feature. The component utilizes the `useState` hook from React to manage the state of the currently open tab.

### Usage
To use the `ConverterSection` component, follow these steps:

1. Import the necessary dependencies:
   - `useState` from the 'react' library.
   - `CurrencyConverter` from the '../currenConverterCustome/CurrencyConverter' file.

2. Add the `ConverterSection` component to your JSX markup:
   ```javascript
   function App() {
     return (
       <div>
         {/* Other components */}
         <ConverterSection color="red" />
         {/* Other components */}
       </div>
     );
   }
   ```

3. Customize the appearance and behavior of the component by providing the desired `color` prop.

### Component Structure
The `ConverterSection` component is structured as follows:

- The component is wrapped in a `div` element with the CSS classes 'flex', 'flex-row', 'flex-wrap-reverse', 'md:h-screen', 'h-full', 'md:flex-nowrap', 'mx-auto', and 'rounded-3xl'. This gives it a flexible layout with a specific height and rounded corners.

- The component consists of two main sections:

  1. **Content Section:**
     - This section occupies the left side of the component and contains a title and a description.
     - The title is displayed using an `h1` element with the CSS classes 'text-4xl' and 'font-bold'.
     - The description is displayed using a `div` element with the CSS classes 'text-base', 'font-bold', and 'text-gray-600'.

  2. **Tabbed Section:**
     - This section occupies the right side of the component and contains a tabbed interface.
     - The tabs are displayed using a `ul` element with the CSS classes 'mb-0', 'list-none', and 'w-2/4'.
     - Each tab is represented by an `li` element with the CSS classes '-mb-px', 'mr-2', 'cursor-pointer', and 'text-center'. The last tab has an additional class 'last:mr-0'.
     - The active tab is determined by the `openTab` state variable.
     - The content of each tab is conditionally rendered based on the `openTab` value.

### Customization
You can customize the component by modifying the following:

- The `color` prop determines the color scheme of the component. You can pass a color value as a prop when using the component.

- You can modify the content, styling, and layout of the title and description in the Content Section.

- You can customize the tabs and their behavior by modifying the CSS classes and the associated event handlers.

Note: This documentation assumes that the `CurrencyConverter` component is implemented correctly and provides the desired functionality for the currency conversion feature.
```
